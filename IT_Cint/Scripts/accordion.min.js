(function (b, a) {
    function c(a) { return !b(a).parents().andSelf().filter(function () { return b.curCSS(this, "visibility") === "hidden" || b.expr.filters.hidden(this) }).length } b.ui = b.ui || {}; b.ui.version || (b.extend(b.ui, { version: "1.8.11", keyCode: { ALT: 18, BACKSPACE: 8, CAPS_LOCK: 20, COMMA: 188, COMMAND: 91, COMMAND_LEFT: 91, COMMAND_RIGHT: 93, CONTROL: 17, DELETE: 46, DOWN: 40, END: 35, ENTER: 13, ESCAPE: 27, HOME: 36, INSERT: 45, LEFT: 37, MENU: 93, NUMPAD_ADD: 107, NUMPAD_DECIMAL: 110, NUMPAD_DIVIDE: 111, NUMPAD_ENTER: 108, NUMPAD_MULTIPLY: 106, NUMPAD_SUBTRACT: 109,
        PAGE_DOWN: 34, PAGE_UP: 33, PERIOD: 190, RIGHT: 39, SHIFT: 16, SPACE: 32, TAB: 9, UP: 38, WINDOWS: 91
    }
    }), b.fn.extend({ _focus: b.fn.focus, focus: function (a, f) { return typeof a === "number" ? this.each(function () { var e = this; setTimeout(function () { b(e).focus(); f && f.call(e) }, a) }) : this._focus.apply(this, arguments) }, scrollParent: function () {
        var a; a = b.browser.msie && /(static|relative)/.test(this.css("position")) || /absolute/.test(this.css("position")) ? this.parents().filter(function () {
            return /(relative|absolute|fixed)/.test(b.curCSS(this,
"position", 1)) && /(auto|scroll)/.test(b.curCSS(this, "overflow", 1) + b.curCSS(this, "overflow-y", 1) + b.curCSS(this, "overflow-x", 1))
        }).eq(0) : this.parents().filter(function () { return /(auto|scroll)/.test(b.curCSS(this, "overflow", 1) + b.curCSS(this, "overflow-y", 1) + b.curCSS(this, "overflow-x", 1)) }).eq(0); return /fixed/.test(this.css("position")) || !a.length ? b(document) : a
    }, zIndex: function (d) {
        if (d !== a) return this.css("zIndex", d); if (this.length) for (var d = b(this[0]), f; d.length && d[0] !== document; ) {
            f = d.css("position"); if (f ===
"absolute" || f === "relative" || f === "fixed") if (f = parseInt(d.css("zIndex"), 10), !isNaN(f) && f !== 0) return f; d = d.parent()
        } return 0
    }, disableSelection: function () { return this.bind((b.support.selectstart ? "selectstart" : "mousedown") + ".ui-disableSelection", function (b) { b.preventDefault() }) }, enableSelection: function () { return this.unbind(".ui-disableSelection") } 
    }), b.each(["Width", "Height"], function (d, f) {
        function e(f, a, d, e) {
            b.each(c, function () {
                a -= parseFloat(b.curCSS(f, "padding" + this, !0)) || 0; d && (a -= parseFloat(b.curCSS(f,
"border" + this + "Width", !0)) || 0); e && (a -= parseFloat(b.curCSS(f, "margin" + this, !0)) || 0)
            }); return a
        } var c = f === "Width" ? ["Left", "Right"] : ["Top", "Bottom"], g = f.toLowerCase(), h = { innerWidth: b.fn.innerWidth, innerHeight: b.fn.innerHeight, outerWidth: b.fn.outerWidth, outerHeight: b.fn.outerHeight }; b.fn["inner" + f] = function (d) { if (d === a) return h["inner" + f].call(this); return this.each(function () { b(this).css(g, e(this, d) + "px") }) }; b.fn["outer" + f] = function (a, d) {
            if (typeof a !== "number") return h["outer" + f].call(this, a); return this.each(function () {
                b(this).css(g,
e(this, a, !0, d) + "px")
            })
        } 
    }), b.extend(b.expr[":"], { data: function (a, f, e) { return !!b.data(a, e[3]) }, focusable: function (a) { var f = a.nodeName.toLowerCase(), e = b.attr(a, "tabindex"); if ("area" === f) { f = a.parentNode; e = f.name; if (!a.href || !e || f.nodeName.toLowerCase() !== "map") return !1; a = b("img[usemap=#" + e + "]")[0]; return !!a && c(a) } return (/input|select|textarea|button|object/.test(f) ? !a.disabled : "a" == f ? a.href || !isNaN(e) : !isNaN(e)) && c(a) }, tabbable: function (a) { var f = b.attr(a, "tabindex"); return (isNaN(f) || f >= 0) && b(a).is(":focusable") } }),
b(function () { var a = document.body, f = a.appendChild(f = document.createElement("div")); b.extend(f.style, { minHeight: "100px", height: "auto", padding: 0, borderWidth: 0 }); b.support.minHeight = f.offsetHeight === 100; b.support.selectstart = "onselectstart" in f; a.removeChild(f).style.display = "none" }), b.extend(b.ui, { plugin: { add: function (a, f, e) { var a = b.ui[a].prototype, c; for (c in e) a.plugins[c] = a.plugins[c] || [], a.plugins[c].push([f, e[c]]) }, call: function (a, b, e) {
    if ((b = a.plugins[b]) && a.element[0].parentNode) for (var c = 0; c < b.length; c++) a.options[b[c][0]] &&
b[c][1].apply(a.element, e)
} 
}, contains: function (a, b) { return document.compareDocumentPosition ? a.compareDocumentPosition(b) & 16 : a !== b && a.contains(b) }, hasScroll: function (a, f) { if (b(a).css("overflow") === "hidden") return !1; var f = f && f === "left" ? "scrollLeft" : "scrollTop", e = !1; if (a[f] > 0) return !0; a[f] = 1; e = a[f] > 0; a[f] = 0; return e }, isOverAxis: function (a, b, e) { return a > b && a < b + e }, isOver: function (a, f, e, c, g, h) { return b.ui.isOverAxis(a, e, g) && b.ui.isOverAxis(f, c, h) } 
}))
})(jQuery);
(function (b, a) {
    if (b.cleanData) { var c = b.cleanData; b.cleanData = function (a) { for (var e = 0, d; (d = a[e]) != null; e++) b(d).triggerHandler("remove"); c(a) } } else { var d = b.fn.remove; b.fn.remove = function (a, e) { return this.each(function () { e || (!a || b.filter(a, [this]).length) && b("*", this).add([this]).each(function () { b(this).triggerHandler("remove") }); return d.call(b(this), a, e) }) } } b.widget = function (a, e, c) {
        var d = a.split(".")[0], h, a = a.split(".")[1]; h = d + "-" + a; if (!c) c = e, e = b.Widget; b.expr[":"][h] = function (e) {
            return !!b.data(e,
a)
        }; b[d] = b[d] || {}; b[d][a] = function (a, b) { arguments.length && this._createWidget(a, b) }; e = new e; e.options = b.extend(!0, {}, e.options); b[d][a].prototype = b.extend(!0, e, { namespace: d, widgetName: a, widgetEventPrefix: b[d][a].prototype.widgetEventPrefix || a, widgetBaseClass: h }, c); b.widget.bridge(a, b[d][a])
    }; b.widget.bridge = function (f, e) {
        b.fn[f] = function (c) {
            var d = typeof c === "string", h = Array.prototype.slice.call(arguments, 1), k = this, c = !d && h.length ? b.extend.apply(null, [!0, c].concat(h)) : c; if (d && c.charAt(0) === "_") return k;
            d ? this.each(function () { var e = b.data(this, f), d = e && b.isFunction(e[c]) ? e[c].apply(e, h) : e; if (d !== e && d !== a) return k = d, !1 }) : this.each(function () { var a = b.data(this, f); a ? a.option(c || {})._init() : b.data(this, f, new e(c, this)) }); return k
        } 
    }; b.Widget = function (a, b) { arguments.length && this._createWidget(a, b) }; b.Widget.prototype = { widgetName: "widget", widgetEventPrefix: "", options: { disabled: !1 }, _createWidget: function (a, e) {
        b.data(e, this.widgetName, this); this.element = b(e); this.options = b.extend(!0, {}, this.options, this._getCreateOptions(),
a); var c = this; this.element.bind("remove." + this.widgetName, function () { c.destroy() }); this._create(); this._trigger("create"); this._init()
    }, _getCreateOptions: function () { return b.metadata && b.metadata.get(this.element[0])[this.widgetName] }, _create: function () { }, _init: function () { }, destroy: function () { this.element.unbind("." + this.widgetName).removeData(this.widgetName); this.widget().unbind("." + this.widgetName).removeAttr("aria-disabled").removeClass(this.widgetBaseClass + "-disabled ui-state-disabled") }, widget: function () { return this.element },
        option: function (c, e) { var d = c; if (arguments.length === 0) return b.extend({}, this.options); if (typeof c === "string") { if (e === a) return this.options[c]; d = {}; d[c] = e } this._setOptions(d); return this }, _setOptions: function (a) { var c = this; b.each(a, function (a, b) { c._setOption(a, b) }); return this }, _setOption: function (a, b) { this.options[a] = b; a === "disabled" && this.widget()[b ? "addClass" : "removeClass"](this.widgetBaseClass + "-disabled ui-state-disabled").attr("aria-disabled", b); return this }, enable: function () {
            return this._setOption("disabled",
!1)
        }, disable: function () { return this._setOption("disabled", !0) }, _trigger: function (a, c, d) { var g = this.options[a], c = b.Event(c); c.type = (a === this.widgetEventPrefix ? a : this.widgetEventPrefix + a).toLowerCase(); d = d || {}; if (c.originalEvent) for (var a = b.event.props.length, h; a; ) h = b.event.props[--a], c[h] = c.originalEvent[h]; this.element.trigger(c, d); return !(b.isFunction(g) && g.call(this.element[0], c, d) === !1 || c.isDefaultPrevented()) } 
    }
})(jQuery);
(function (b) {
    b.widget("ui.accordion", { options: { active: 0, animated: "slide", autoHeight: !0, clearStyle: !1, collapsible: !1, event: "click", fillSpace: !1, header: "> li > :first-child,> :not(li):even", icons: { header: "ui-icon-triangle-1-e", headerSelected: "ui-icon-triangle-1-s" }, navigation: !1, navigationFilter: function () { return this.href.toLowerCase() === location.href.toLowerCase() } }, _create: function () {
        var a = this, c = a.options; a.running = 0; a.element.addClass("ui-accordion ui-widget ui-helper-reset").children("li").addClass("ui-accordion-li-fix");
        a.headers = a.element.find(c.header).addClass("ui-accordion-header ui-helper-reset ui-state-default ui-corner-all").bind("mouseenter.accordion", function () { c.disabled || b(this).addClass("ui-state-hover") }).bind("mouseleave.accordion", function () { c.disabled || b(this).removeClass("ui-state-hover") }).bind("focus.accordion", function () { c.disabled || b(this).addClass("ui-state-focus") }).bind("blur.accordion", function () { c.disabled || b(this).removeClass("ui-state-focus") }); a.headers.next().addClass("ui-accordion-content ui-helper-reset ui-widget-content ui-corner-bottom");
        if (c.navigation) { var d = a.element.find("a").filter(c.navigationFilter).eq(0); if (d.length) { var f = d.closest(".ui-accordion-header"); a.active = f.length ? f : d.closest(".ui-accordion-content").prev() } } a.active = a._findActive(a.active || c.active).addClass("ui-state-default ui-state-active").toggleClass("ui-corner-all").toggleClass("ui-corner-top"); a.active.next().addClass("ui-accordion-content-active"); a._createIcons(); a.resize(); a.element.attr("role", "tablist"); a.headers.attr("role", "tab").bind("keydown.accordion",
function (b) { return a._keydown(b) }).next().attr("role", "tabpanel"); a.headers.not(a.active || "").attr({ "aria-expanded": "false", "aria-selected": "false", tabIndex: -1 }).next().hide(); a.active.length ? a.active.attr({ "aria-expanded": "true", "aria-selected": "true", tabIndex: 0 }) : a.headers.eq(0).attr("tabIndex", 0); b.browser.safari || a.headers.find("a").attr("tabIndex", -1); c.event && a.headers.bind(c.event.split(" ").join(".accordion ") + ".accordion", function (b) { a._clickHandler.call(a, b, this); b.preventDefault() })
    }, _createIcons: function () {
        var a =
this.options; a.icons && (b("<span></span>").addClass("ui-icon " + a.icons.header).prependTo(this.headers), this.active.children(".ui-icon").toggleClass(a.icons.header).toggleClass(a.icons.headerSelected), this.element.addClass("ui-accordion-icons"))
    }, _destroyIcons: function () { this.headers.children(".ui-icon").remove(); this.element.removeClass("ui-accordion-icons") }, destroy: function () {
        var a = this.options; this.element.removeClass("ui-accordion ui-widget ui-helper-reset").removeAttr("role"); this.headers.unbind(".accordion").removeClass("ui-accordion-header ui-accordion-disabled ui-helper-reset ui-state-default ui-corner-all ui-state-active ui-state-disabled ui-corner-top").removeAttr("role").removeAttr("aria-expanded").removeAttr("aria-selected").removeAttr("tabIndex");
        this.headers.find("a").removeAttr("tabIndex"); this._destroyIcons(); var c = this.headers.next().css("display", "").removeAttr("role").removeClass("ui-helper-reset ui-widget-content ui-corner-bottom ui-accordion-content ui-accordion-content-active ui-accordion-disabled ui-state-disabled"); (a.autoHeight || a.fillHeight) && c.css("height", ""); return b.Widget.prototype.destroy.call(this)
    }, _setOption: function (a, c) {
        b.Widget.prototype._setOption.apply(this, arguments); a == "active" && this.activate(c); a == "icons" && (this._destroyIcons(),
c && this._createIcons()); if (a == "disabled") this.headers.add(this.headers.next())[c ? "addClass" : "removeClass"]("ui-accordion-disabled ui-state-disabled")
    }, _keydown: function (a) {
        if (!this.options.disabled && !a.altKey && !a.ctrlKey) {
            var c = b.ui.keyCode, d = this.headers.length, f = this.headers.index(a.target), e = !1; switch (a.keyCode) { case c.RIGHT: case c.DOWN: e = this.headers[(f + 1) % d]; break; case c.LEFT: case c.UP: e = this.headers[(f - 1 + d) % d]; break; case c.SPACE: case c.ENTER: this._clickHandler({ target: a.target }, a.target), a.preventDefault() } if (e) return b(a.target).attr("tabIndex",
-1), b(e).attr("tabIndex", 0), e.focus(), !1; return !0
        } 
    }, resize: function () {
        var a = this.options, c; if (a.fillSpace) { if (b.browser.msie) { var d = this.element.parent().css("overflow"); this.element.parent().css("overflow", "hidden") } c = this.element.parent().height(); b.browser.msie && this.element.parent().css("overflow", d); this.headers.each(function () { c -= b(this).outerHeight(!0) }); this.headers.next().each(function () { b(this).height(Math.max(0, c - b(this).innerHeight() + b(this).height())) }).css("overflow", "auto") } else a.autoHeight &&
(c = 0, this.headers.next().each(function () { c = Math.max(c, b(this).height("").height()) }).height(c)); return this
    }, activate: function (a) { this.options.active = a; a = this._findActive(a)[0]; this._clickHandler({ target: a }, a); return this }, _findActive: function (a) { return a ? typeof a === "number" ? this.headers.filter(":eq(" + a + ")") : this.headers.not(this.headers.not(a)) : a === !1 ? b([]) : this.headers.filter(":eq(0)") }, _clickHandler: function (a, c) {
        var d = this.options; if (!d.disabled) if (a.target) {
            if (a = b(a.currentTarget || c), c = a[0] ===
this.active[0], d.active = d.collapsible && c ? !1 : this.headers.index(a), !(this.running || !d.collapsible && c)) {
                var f = this.active, e = a.next(), i = this.active.next(), g = { options: d, newHeader: c && d.collapsible ? b([]) : a, oldHeader: this.active, newContent: c && d.collapsible ? b([]) : e, oldContent: i }, h = this.headers.index(this.active[0]) > this.headers.index(a[0]); this.active = c ? b([]) : a; this._toggle(e, i, g, c, h); f.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header);
                c || (a.removeClass("ui-state-default ui-corner-all").addClass("ui-state-active ui-corner-top").children(".ui-icon").removeClass(d.icons.header).addClass(d.icons.headerSelected), a.next().addClass("ui-accordion-content-active"))
            } 
        } else if (d.collapsible) {
            this.active.removeClass("ui-state-active ui-corner-top").addClass("ui-state-default ui-corner-all").children(".ui-icon").removeClass(d.icons.headerSelected).addClass(d.icons.header); this.active.next().addClass("ui-accordion-content-active"); var i = this.active.next(),
g = { options: d, newHeader: b([]), oldHeader: d.active, newContent: b([]), oldContent: i }, e = this.active = b([]); this._toggle(e, i, g)
        } 
    }, _toggle: function (a, c, d, f, e) {
        var i = this, g = i.options; i.toShow = a; i.toHide = c; i.data = d; var h = function () { if (i) return i._completed.apply(i, arguments) }; i._trigger("changestart", null, i.data); i.running = c.size() === 0 ? a.size() : c.size(); if (g.animated) {
            d = {}; d = g.collapsible && f ? { toShow: b([]), toHide: c, complete: h, down: e, autoHeight: g.autoHeight || g.fillSpace} : { toShow: a, toHide: c, complete: h, down: e, autoHeight: g.autoHeight ||
g.fillSpace
            }; if (!g.proxied) g.proxied = g.animated; if (!g.proxiedDuration) g.proxiedDuration = g.duration; g.animated = b.isFunction(g.proxied) ? g.proxied(d) : g.proxied; g.duration = b.isFunction(g.proxiedDuration) ? g.proxiedDuration(d) : g.proxiedDuration; var f = b.ui.accordion.animations, k = g.duration, j = g.animated; j && !f[j] && !b.easing[j] && (j = "slide"); f[j] || (f[j] = function (a) { this.slide(a, { easing: j, duration: k || 700 }) }); f[j](d)
        } else g.collapsible && f ? a.toggle() : (c.hide(), a.show()), h(!0); c.prev().attr({ "aria-expanded": "false",
            "aria-selected": "false", tabIndex: -1
        }).blur(); a.prev().attr({ "aria-expanded": "true", "aria-selected": "true", tabIndex: 0 }).focus()
    }, _completed: function (a) { this.running = a ? 0 : --this.running; if (!this.running) { this.options.clearStyle && this.toShow.add(this.toHide).css({ height: "", overflow: "" }); this.toHide.removeClass("ui-accordion-content-active"); if (this.toHide.length) this.toHide.parent()[0].className = this.toHide.parent()[0].className; this._trigger("change", null, this.data) } } 
    }); b.extend(b.ui.accordion, { version: "1.8.11",
        animations: { slide: function (a, c) {
            a = b.extend({ easing: "swing", duration: 300 }, a, c); if (a.toHide.size()) if (a.toShow.size()) {
                var d = a.toShow.css("overflow"), f = 0, e = {}, i = {}, g, c = a.toShow; g = c[0].style.width; c.width(parseInt(c.parent().width(), 10) - parseInt(c.css("paddingLeft"), 10) - parseInt(c.css("paddingRight"), 10) - (parseInt(c.css("borderLeftWidth"), 10) || 0) - (parseInt(c.css("borderRightWidth"), 10) || 0)); b.each(["height", "paddingTop", "paddingBottom"], function (c, d) {
                    i[d] = "hide"; c = ("" + b.css(a.toShow[0], d)).match(/^([\d+-.]+)(.*)$/);
                    e[d] = { value: c[1], unit: c[2] || "px"}
                }); a.toShow.css({ height: 0, overflow: "hidden" }).show(); a.toHide.filter(":hidden").each(a.complete).end().filter(":visible").animate(i, { step: function (b, c) { c.prop == "height" && (f = c.end - c.start === 0 ? 0 : (c.now - c.start) / (c.end - c.start)); a.toShow[0].style[c.prop] = f * e[c.prop].value + e[c.prop].unit }, duration: a.duration, easing: a.easing, complete: function () { a.autoHeight || a.toShow.css("height", ""); a.toShow.css({ width: g, overflow: d }); a.complete() } })
            } else a.toHide.animate({ height: "hide",
                paddingTop: "hide", paddingBottom: "hide"
            }, a); else a.toShow.animate({ height: "show", paddingTop: "show", paddingBottom: "show" }, a)
        }, bounceslide: function (a) { this.slide(a, { easing: a.down ? "easeOutBounce" : "swing", duration: a.down ? 1E3 : 200 }) } 
        }
    })
})(jQuery);