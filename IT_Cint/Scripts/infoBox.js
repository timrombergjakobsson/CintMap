function InfoBox(a) {
    a = a || {}; google.maps.OverlayView.apply(this, arguments); this.content_ = a.content || ""; this.disableAutoPan_ = a.disableAutoPan || !1; this.maxWidth_ = a.maxWidth || 0; this.pixelOffset_ = a.pixelOffset || new google.maps.Size(0, 0); this.position_ = a.position || new google.maps.LatLng(0, 0); this.zIndex_ = a.zIndex || null; this.boxStyle_ = a.boxStyle || {}; this.closeBoxMargin_ = a.closeBoxMargin || "2px"; this.closeBoxURL_ = a.closeBoxURL || "http://www.google.com/intl/en_us/mapfiles/close.gif"; if (a.closeBoxURL === "") this.closeBoxURL_ =
""; this.infoBoxClearance_ = a.infoBoxClearance || new google.maps.Size(1, 1); this.isHidden_ = a.isHidden || !1; this.pane_ = a.pane || "floatPane"; this.fixedWidthSet_ = this.closeListener_ = this.div_ = null
} InfoBox.prototype = new google.maps.OverlayView;
InfoBox.prototype.createInfoBoxDiv_ = function () {
    var a; if (!this.div_) {
        this.div_ = document.createElement("div"); this.setBoxStyle_(); this.div_.style.position = "absolute"; this.div_.style.visibility = "hidden"; if (this.zIndex_ !== null) this.div_.style.zIndex = this.zIndex_; this.div_.innerHTML = this.getCloseBoxImg_() + this.content_; this.getPanes()[this.pane_].appendChild(this.div_); this.addClickHandler_(); this.div_.style.width ? this.fixedWidthSet_ = !0 : this.maxWidth_ !== 0 && this.div_.offsetWidth > this.maxWidth_ ? (this.div_.style.width =
this.maxWidth_, this.div_.style.overflow = "auto", this.fixedWidthSet_ = !0) : (a = this.getBoxWidths_(), this.div_.style.width = this.div_.offsetWidth - a.left - a.right + "px", this.fixedWidthSet_ = !1); this.panBox_(this.disableAutoPan_); google.maps.event.trigger(this, "domready")
    } 
};
InfoBox.prototype.getCloseBoxImg_ = function () { var a = ""; this.closeBoxURL_ !== "" && (a = "<img", a += " src='" + this.closeBoxURL_ + "'", a += " align=right", a += " style='", a += " position: relative;", a += " cursor: pointer;", a += " margin: " + this.closeBoxMargin_ + ";", a += "'>"); return a }; InfoBox.prototype.addClickHandler_ = function () { var a; this.closeBoxURL_ !== "" ? (a = this.div_.firstChild, this.closeListener_ = google.maps.event.addDomListener(a, "click", this.getCloseClickHandler_())) : this.closeListener_ = null };
InfoBox.prototype.getCloseClickHandler_ = function () { var a = this; return function () { a.close(); google.maps.event.trigger(a, "closeclick") } };
InfoBox.prototype.panBox_ = function (a) {
    if (!a) {
        var a = this.getMap(), b = a.getBounds(), c = a.getDiv(), e = c.offsetWidth, c = c.offsetHeight, d = b.toSpan(), f = d.lng(), g = d.lat(), d = f / e; g /= c; var c = b.getSouthWest().lng(), f = b.getNorthEast().lng(), e = b.getNorthEast().lat(), b = b.getSouthWest().lat(), i = this.position_, h = this.pixelOffset_.width, j = this.pixelOffset_.height, k = this.infoBoxClearance_.width, l = this.infoBoxClearance_.height, m = i.lng() + (h - k) * d, h = i.lng() + (h + this.div_.offsetWidth + k) * d, d = i.lat() - (j - l) * g, g = i.lat() - (j + this.div_.offsetHeight +
l) * g, c = (m < c ? c - m : 0) + (h > f ? f - h : 0), e = (d > e ? e - d : 0) + (g < b ? b - g : 0); e === 0 && c === 0 || (f = a.getCenter(), a.setCenter(new google.maps.LatLng(f.lat() - e, f.lng() - c)))
    } 
}; InfoBox.prototype.setBoxStyle_ = function () { var a, b = this.boxStyle_; for (a in b) b.hasOwnProperty(a) && (this.div_.style[a] = b[a]); if (typeof this.div_.style.opacity !== "undefined") this.div_.style.filter = "alpha(opacity=" + this.div_.style.opacity * 100 + ")" };
InfoBox.prototype.getBoxWidths_ = function () {
    var a, b = { top: 0, bottom: 0, left: 0, right: 0 }; a = this.div_; if (document.defaultView && document.defaultView.getComputedStyle) { if (a = a.ownerDocument.defaultView.getComputedStyle(a, "")) b.top = parseInt(a.borderTopWidth, 10) || 0, b.bottom = parseInt(a.borderBottomWidth, 10) || 0, b.left = parseInt(a.borderLeftWidth, 10) || 0, b.right = parseInt(a.borderRightWidth, 10) || 0 } else if (document.documentElement.currentStyle && a.currentStyle) b.top = parseInt(a.currentStyle.borderTopWidth, 10) || 0, b.bottom =
parseInt(a.currentStyle.borderBottomWidth, 10) || 0, b.left = parseInt(a.currentStyle.borderLeftWidth, 10) || 0, b.right = parseInt(a.currentStyle.borderRightWidth, 10) || 0; return b
}; InfoBox.prototype.onRemove = function () { if (this.div_) this.div_.parentNode.removeChild(this.div_), this.div_ = null };
InfoBox.prototype.draw = function () { this.createInfoBoxDiv_(); var a = this.getProjection().fromLatLngToDivPixel(this.position_); this.div_.style.left = a.x + this.pixelOffset_.width + "px"; this.div_.style.top = a.y + this.pixelOffset_.height + "px"; this.div_.style.visibility = this.isHidden_ ? "hidden" : "visible" };
InfoBox.prototype.setOptions = function (a) {
    if (typeof a.boxStyle !== "undefined") this.boxStyle_ = a.boxStyle, this.setBoxStyle_(); typeof a.content !== "undefined" && this.setContent(a.content); if (typeof a.disableAutoPan !== "undefined") this.disableAutoPan_ = a.disableAutoPan; if (typeof a.maxWidth !== "undefined") this.maxWidth_ = a.maxWidth; if (typeof a.pixelOffset !== "undefined") this.pixelOffset_ = a.pixelOffset; typeof a.position !== "undefined" && this.setPosition(a.position); typeof a.zIndex !== "undefined" && this.setZIndex(a.zIndex);
    if (typeof a.closeBoxMargin !== "undefined") this.closeBoxMargin_ = a.closeBoxMargin; if (typeof a.closeBoxURL !== "undefined") this.closeBoxURL_ = a.closeBoxURL; if (typeof a.infoBoxClearance !== "undefined") this.infoBoxClearance_ = a.infoBoxClearance; if (typeof a.isHidden !== "undefined") this.isHidden_ = a.isHidden; this.div_ && this.draw()
};
InfoBox.prototype.setContent = function (a) { this.content_ = a; if (this.div_) { if (this.closeListener_) google.maps.event.removeListener(this.closeListener_), this.closeListener_ = null; if (!this.fixedWidthSet_) this.div_.style.width = ""; this.div_.innerHTML = this.getCloseBoxImg_() + a; if (!this.fixedWidthSet_) this.div_.style.width = this.div_.offsetWidth + "px", this.div_.innerHTML = this.getCloseBoxImg_() + a; this.addClickHandler_() } google.maps.event.trigger(this, "content_changed") };
InfoBox.prototype.setPosition = function (a) { this.position_ = a; this.div_ && this.draw(); google.maps.event.trigger(this, "position_changed") }; InfoBox.prototype.setZIndex = function (a) { this.zIndex_ = a; if (this.div_) this.div_.style.zIndex = a; google.maps.event.trigger(this, "zindex_changed") }; InfoBox.prototype.getContent = function () { return this.content_ }; InfoBox.prototype.getPosition = function () { return this.position_ }; InfoBox.prototype.getZIndex = function () { return this.zIndex_ };
InfoBox.prototype.show = function () { this.isHidden_ = !1; this.div_.style.visibility = "visible" }; InfoBox.prototype.hide = function () { this.isHidden_ = !0; this.div_.style.visibility = "hidden" }; InfoBox.prototype.open = function (a, b) { if (b) this.position_ = b.getPosition(); this.setMap(a); this.div_ && this.panBox_() }; InfoBox.prototype.close = function () { if (this.closeListener_) google.maps.event.removeListener(this.closeListener_), this.closeListener_ = null; this.setMap(null) };